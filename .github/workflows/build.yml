on:
    pull_request:
    push:
      branches-ignore:
        - main

jobs:
  versiontag:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Check version tag
        run: |
          curl -f https://raw.githubusercontent.com/pvarki/python-libpvarki/main/pyproject.toml -o /tmp/main_pyproject.toml || touch /tmp/main_pyproject.toml
          grep "version = " pyproject.toml >/tmp/version.txt
          grep "version = " /tmp/main_pyproject.toml >/tmp/main_version.txt
          diff /tmp/main_version.txt /tmp/version.txt && exit 1 || exit 0

  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"  # TODO: the current pylint version fails on py3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Do pre-commit checks (black, lint, mypy)
        run: poetry run docker/pre_commit_init.sh

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Test with pytest
        run: |
          poetry run py.test -v

  devel_shell:
    runs-on: ubuntu-latest
    steps:
    - uses: pvarki/ci@main
      with:
        dockerfile-target: devel_shell
        image-tag: rasenmaeher_api:devel_shell
